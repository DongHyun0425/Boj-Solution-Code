#include <iostream>
#include <string>
#include <algorithm>
#include <vector>
#include <queue>
#include <tuple>
using namespace std;

vector <long long int> v;
long long int vmax = 0;
void binary_search(long long int first , long long int last, long long int target) {
	int count = 0;
	while (first <= last) {
		long long result = 0;
		long long int mid = (first + last) / 2;
		for (int i = 0; i < v.size(); i++) {
			if (v[i] >= mid) {
				result += mid;
			}
			else {
				result += v[i];
			}
		}
		if (result == target) {
			cout << mid;
			count++;
			break;
		}

		if (result > target) {
			last = mid - 1;
		}
		else {
			vmax = mid;
			first = mid + 1;
		}
	}
	if (count == 0) {
		cout << vmax;
	}
}

int main() {
	int N;
	cin >> N;
	long long int M;
	
	for (int i = 0; i < N; i++) {
		long long int k = 0;
		cin >> k;
		v.push_back(k);
	}

	sort(v.begin(), v.end());

	long long int first = 0;
	long long int last = v.back();

	long long int result = 0;
	cin >> result;
	binary_search(first, last, result);
}
